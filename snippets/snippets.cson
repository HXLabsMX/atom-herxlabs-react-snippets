'.source.js,source.jsx':
# To Start
  'App Base':
    'prefix': 'xInit'
    'body': """
      import React, { Component } from 'react'
      import { render } from 'react-dom'

      class ${1} extends Component {
        render(){
          return (
            ${3}
          )
        }
      }

      render(<${1} />, document.getElementById('${2}'));
    """
  'Component Base':
    'prefix': 'XInitc'
    'body': """
      import React, { Component } from 'react'

      export default class ${1} extends Component {
        render() {
          return (
            ${2}
          )
        }
      }
    """
# Lifecycle
  'constructor()':
    'prefix': 'constructor'
    'body': """
      contructor(props){
        super(props)
        this.state = {${1}}
      }
    """
  'componentWillMount()':
    'prefix': 'xCWM'
    'body': """
      componentWillMount() {
        ${1}
      }
    """
  'componentDidMount()':
    'prefix': 'xCDM'
    'body': """
      componentWillMount() {
        ${1}
      }
    """
  'componentWillReceiveProps()':
    'prefix': 'xCWRP'
    'body': """
      componentWillReceiveProps() {
        ${1}
      }
    """
  'shouldComponentUpdate()':
    'prefix': 'xSCU'
    'body': """
      shouldComponentUpdate() {
        ${1}
      }
    """
  'componentWillUpdate()':
    'prefix': 'xCWU'
    'body': """
      componentWillUpdate() {
        ${1}
      }
    """
  'componentDidUpdate()':
    'prefix': 'xCDU'
    'body': """
      componentDidUpdate() {
        ${1}
      }
    """
  'componentWillUnMount()':
    'prefix': 'xCWUM'
    'body': """
      componentWillUnMount() {
        ${1}
      }
    """
# State and props
  'setState()':
    'prefix': 'xsetState'
    'body': """
      this.setState((prevState, props) => ({
        ${1}
      }))
    """
  'state':
    'prefix': 'xState'
    'body': """
      this.state.${1}
    """
  'props':
    'prefix': 'xdefaultProps'
    'body': """
      ${1:myComponent}.defaultProps = {
        ${2:color: 'blue'}
      }
    """
  'props':
    'prefix': 'xProps'
    'body': """
      this.props.${1}
    """
# Styles
  'StyleSheet':
    'prefix': 'xStyleSheet'
    'body': """
      const styles = StyleSheet.create({
        ${1:myStyle}: {
          ${2:flex: 1,}
          }),
        },
      })
    """
  'Style':
    'prefix': 'xStyle'
    'body': """
      ${1:myStyle}: {
        ${2:backgroundColor: 'lightgrey',}
        }),
      },
    """
  'StyleAsign':
    'prefix': 'xStyleAsign'
    'body': """
      style={styles.${1:myStyle}}
    """
# Misc
  'Firebase':
    'prefix': 'xFirebase'
    'body': """
      import firebase from 'firebase'

      firebase.initializeApp({
        apiKey: '',
        authDomain: '',
        databaseURL: '',
        storageBucket: ''
      })
    """
